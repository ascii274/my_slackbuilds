xBRZ 1.4 support for gzdoom.
Taken and updated from https://github.com/coelckers/gzdoom/pull/7
Apply to tag g2.1.0
diff -rupN gzdoom.orig/src/CMakeLists.txt gzdoom/src/CMakeLists.txt
--- gzdoom.orig/src/CMakeLists.txt	2016-02-14 17:04:29.174997337 -0800
+++ gzdoom/src/CMakeLists.txt	2016-02-14 16:56:06.047997750 -0800
@@ -498,7 +498,7 @@ if( ZD_CMAKE_COMPILER_IS_GNUCXX_COMPATIB
 		set( CMAKE_CXX_FLAGS "-Wno-unused-result ${CMAKE_CXX_FLAGS}" )
 	endif()
 	set( CMAKE_C_FLAGS "-Wall -Wextra -Wno-unused -Wno-unused-parameter -Wno-missing-field-initializers ${CMAKE_C_FLAGS}" )
-	set( CMAKE_CXX_FLAGS "-Wall -Wextra -Wno-unused -Wno-unused-parameter -Wno-missing-field-initializers ${CMAKE_CXX_FLAGS}" )
+	set( CMAKE_CXX_FLAGS "-DNDEBUG -std=c++11 -Wall -Wextra -Wno-unused -Wno-unused-parameter -Wno-missing-field-initializers ${CMAKE_CXX_FLAGS}" )
 
 	# Remove extra warnings when using the official DirectX headers.
 	# Also, TDM-GCC 4.4.0 no longer accepts glibc-style printf formats as valid,
@@ -818,6 +818,7 @@ file( GLOB HEADER_FILES
 	gl/data/*.h
 	gl/dynlights/*.h
 	gl/hqnx/*.h
+	gl/xBRZ/*.h
 	gl/hqnx_asm/*.h
 	gl/models/*.h
 	gl/renderer/*.h
@@ -1026,6 +1027,7 @@ set( FASTMATH_SOURCES
 	gl/hqnx/hq2x.cpp
 	gl/hqnx/hq3x.cpp
 	gl/hqnx/hq4x.cpp
+	gl/xBRZ/xbrz.cpp
 	gl/textures/gl_hwtexture.cpp
 	gl/textures/gl_texture.cpp
 	gl/textures/gl_material.cpp
diff -rupN gzdoom.orig/src/gl/textures/gl_hqresize.cpp gzdoom/src/gl/textures/gl_hqresize.cpp
--- gzdoom.orig/src/gl/textures/gl_hqresize.cpp	2016-02-14 17:04:29.210997337 -0800
+++ gzdoom/src/gl/textures/gl_hqresize.cpp	2016-02-14 17:01:35.397997480 -0800
@@ -40,6 +40,7 @@
 #include "gl/textures/gl_texture.h"
 #include "c_cvars.h"
 #include "gl/hqnx/hqx.h"
+#include "gl/xBRZ/xbrz.h"
 #ifdef HAVE_MMX
 #include "gl/hqnx_asm/hqnx_asm.h"
 #endif
@@ -47,9 +48,9 @@
 CUSTOM_CVAR(Int, gl_texture_hqresize, 0, CVAR_ARCHIVE | CVAR_GLOBALCONFIG | CVAR_NOINITCALL)
 {
 #ifdef HAVE_MMX
-	if (self < 0 || self > 9)
+	if (self < 0 || self > 14)
 #else
-	if (self < 0 || self > 6)
+	if (self < 0 || self > 11)
 #endif
 		self = 0;
 	GLRenderer->FlushTextures();
@@ -242,6 +243,24 @@ static unsigned char *hqNxHelper( void (
 }
 
 
+static unsigned char *xBRZHelper(
+							  const int N,
+							  unsigned char *inputBuffer,
+							  const int inWidth,
+							  const int inHeight,
+							  int &outWidth,
+							  int &outHeight )
+{
+	outWidth = N * inWidth;
+	outHeight = N *inHeight;
+
+	unsigned char * newBuffer = new unsigned char[outWidth*outHeight*4];
+	xbrz::scale( N, reinterpret_cast<const unsigned*>(inputBuffer), reinterpret_cast<unsigned*>(newBuffer), inWidth, inHeight, xbrz::ColorFormat::ARGB );
+	delete[] inputBuffer;
+	return newBuffer;
+}
+
+
 //===========================================================================
 // 
 // [BB] Upsamples the texture in inputBuffer, frees inputBuffer and returns
@@ -310,12 +329,22 @@ unsigned char *gl_CreateUpsampledTexture
 			return hqNxHelper( &hq3x_32, 3, inputBuffer, inWidth, inHeight, outWidth, outHeight );
 		case 6:
 			return hqNxHelper( &hq4x_32, 4, inputBuffer, inWidth, inHeight, outWidth, outHeight );
-#ifdef HAVE_MMX
 		case 7:
-			return hqNxAsmHelper( &HQnX_asm::hq2x_32, 2, inputBuffer, inWidth, inHeight, outWidth, outHeight );
+			return xBRZHelper( 2, inputBuffer, inWidth, inHeight, outWidth, outHeight );
 		case 8:
-			return hqNxAsmHelper( &HQnX_asm::hq3x_32, 3, inputBuffer, inWidth, inHeight, outWidth, outHeight );
+			return xBRZHelper( 3, inputBuffer, inWidth, inHeight, outWidth, outHeight );
 		case 9:
+			return xBRZHelper( 4, inputBuffer, inWidth, inHeight, outWidth, outHeight );
+		case 10:
+			return xBRZHelper( 5, inputBuffer, inWidth, inHeight, outWidth, outHeight );
+		case 11:
+			return xBRZHelper( 6, inputBuffer, inWidth, inHeight, outWidth, outHeight );
+#ifdef HAVE_MMX
+		case 12:
+			return hqNxAsmHelper( &HQnX_asm::hq2x_32, 2, inputBuffer, inWidth, inHeight, outWidth, outHeight );
+		case 13:
+			return hqNxAsmHelper( &HQnX_asm::hq3x_32, 3, inputBuffer, inWidth, inHeight, outWidth, outHeight );
+		case 14:
 			return hqNxAsmHelper( &HQnX_asm::hq4x_32, 4, inputBuffer, inWidth, inHeight, outWidth, outHeight );
 #endif
 		}
diff -rupN gzdoom.orig/wadsrc/static/menudef.z gzdoom/wadsrc/static/menudef.z
--- gzdoom.orig/wadsrc/static/menudef.z	2016-02-14 17:04:29.280997337 -0800
+++ gzdoom/wadsrc/static/menudef.z	2016-02-14 16:57:33.578997679 -0800
@@ -103,9 +103,14 @@ OptionValue "HqResizeModes"
    4, "hq2x"
    5, "hq3x"
    6, "hq4x"
-   7, "hq2x MMX"
-   8, "hq3x MMX"
-   9, "hq4x MMX"
+   7, "2xBRZ"
+   8, "3xBRZ"
+   9, "4xBRZ"
+   10, "5xBRZ"
+   11, "6xBRZ"
+   12, "hq2x MMX"
+   13, "hq3x MMX"
+   14, "hq4x MMX"
 }
 
 OptionValue "FogMode"
